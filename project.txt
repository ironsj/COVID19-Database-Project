SQL> /*
SQL> CIS 353 - Database Design Project
SQL> Alek Sherwood
SQL> Annemieke Engelsma
SQL> Jake Irons
SQL> Karim Seif
SQL> */
SQL> --
SQL> --
SQL> /*< The SQL/DDL code that creates your schema >*/
SQL> CREATE TABLE Residence(
  2  residenceID INTEGER,
  3  residenceName VARCHAR2(25) NOT NULL,
  4  residenceType VARCHAR2(15) NOT NULL,
  5  -- residenceIC1: residenceID is unique
  6  CONSTRAINT residenceIC1 PRIMARY KEY (residenceID),
  7  -- ressidenceIC2: residenceType must be "On Campus" or "Off Campus"
  8  CONSTRAINT residenceIC2 CHECK( residenceType IN('On Campus', 'Off Campus'))
  9  );

Table created.

SQL> --
SQL> CREATE TABLE Room(
  2  roomNum INTEGER,
  3  roomCapacity INTEGER NOT NULL,
  4  buildingName VARCHAR2(25) NOT NULL,
  5  -- roomIC1: roomNum is unique
  6  CONSTRAINT roomIC1 PRIMARY KEY (roomNum),
  7  -- roomIC2: roomCapacity must be less than 76
  8  CONSTRAINT roomIC2 CHECK (roomCapacity > 0 AND roomCapacity <= 75)
  9  );

Table created.

SQL> --
SQL> CREATE TABLE Class(
  2  classID CHAR(7),
  3  className VARCHAR2(25) NOT NULL,
  4  numStudents INTEGER NOT NULL,
  5  roomNum INTEGER NOT NULL,
  6  -- classIC1: classID is unique
  7  CONSTRAINT classIC1 PRIMARY KEY (classID),
  8  -- classIC2: Every class must have a room
  9  CONSTRAINT classIC2 FOREIGN KEY (roomNum) REFERENCES Room(roomNum),
 10  -- classIC3: The number of students in a class must be less than 76
 11  CONSTRAINT classIC3 CHECK (numStudents > 0 AND numStudents <= 75)
 12  );

Table created.

SQL> --
SQL> CREATE TABLE Person(
  2  gNumber CHAR(10),
  3  pName VARCHAR2(20) NOT NULL,
  4  pType VARCHAR2(15) NOT NULL,
  5  resID INTEGER NOT NULL,
  6  -- personIC1: gNumbers are unique
  7  CONSTRAINT personIC1 PRIMARY KEY (gNumber),
  8  -- personIC2: Every person must have a residence
  9  CONSTRAINT personIC2 FOREIGN KEY (resID) REFERENCES Residence(residenceID),
 10  -- personIC3: A person must be a professor or a student
 11  CONSTRAINT personIC3 CHECK( pType IN ('Student', 'Professor'))
 12  );

Table created.

SQL> --
SQL> CREATE TABLE Department(
  2  departmentID INTEGER,
  3  departmentName VARCHAR2(25) NOT NULL,
  4  departmentLeadID CHAR(10),
  5  -- departmentIC1: departmentID is unique
  6  CONSTRAINT departmentIC1 PRIMARY KEY (departmentID),
  7  -- departmentIC2: The department lead must be a real person
  8  CONSTRAINT departmentIC2 FOREIGN KEY (departmentLeadID)
  9  	     REFERENCES Person(gNumber)
 10  	     ON DELETE SET NULL,
 11  -- departmentIC3: A department lead can only oversee one department
 12  CONSTRAINT departmentIC3 UNIQUE (departmentLeadID)
 13  );

Table created.

SQL> --
SQL> CREATE TABLE VaccineTest(
  2  gNumber CHAR(10),
  3  testDate DATE,
  4  testResult VARCHAR2(15),
  5  testType VARCHAR2(10) NOT NULL,
  6  -- testIC1: A person can get one COVID test on a given date
  7  CONSTRAINT testIC1 PRIMARY KEY (gNumber, testDate),
  8  -- testIC2: A COVID test must be given to a real person
  9  CONSTRAINT testIC2 FOREIGN KEY (gNumber)
 10  	     REFERENCES Person(gNumber)
 11  	     ON DELETE CASCADE,
 12  -- testIC3: A COVID test type must be Rapid or Slow
 13  CONSTRAINT testIC3 CHECK (testType IN ('Rapid', 'Slow')),
 14  -- testIC4: A COVID test result must be Positive or Negative
 15  CONSTRAINT testIC4 CHECK (testResult IN ('Positive', 'Negative'))
 16  );

Table created.

SQL> --
SQL> CREATE TABLE VaccineRecord(
  2  gNumber CHAR(10),
  3  shotDate DATE,
  4  vaccineType VARCHAR2(20) NOT NULL,
  5  shotNumber INTEGER NOT NULL,
  6  -- recordIC1: A person can receive one COVID vaccine on a given date
  7  CONSTRAINT recordIC1 PRIMARY KEY (gNumber, shotDate),
  8  -- recordIC2: A COVID vaccine must be given to a real person
  9  CONSTRAINT recordIC2 FOREIGN KEY (gNumber)
 10  	     REFERENCES Person(gNumber)
 11  	     ON DELETE CASCADE,
 12  -- recordIC3: A COVID vaccine must be of the type Moderna, Pfizer, or Johnson and Johnson
 13  CONSTRAINT recordIC3 CHECK (vaccineType IN ('Moderna', 'Pfizer', 'Johnson and Johnson')),
 14  -- recordIC4: If a person received the Johnson and Johnson vaccine their shot number must be 1
 15  CONSTRAINT recordIC4 CHECK (NOT((vaccineType IN ('Johnson and Johnson')) AND (shotNumber != 1))),
 16  -- recordIC5: The shot number cannot be greater than 2 and must be greater than 0
 17  CONSTRAINT recordIC5 CHECK (shotNumber <= 2 AND shotNumber > 0)
 18  );

Table created.

SQL> --
SQL> CREATE TABLE DepartmentLocation(
  2  departmentID INTEGER,
  3  departmentLocation VARCHAR2(25),
  4  -- dLocationIC1: A department and it's location are unique
  5  CONSTRAINT dLocationIC1 PRIMARY KEY (departmentID, departmentLocation),
  6  -- dLocationIC2: The department must exist
  7  CONSTRAINT dLocationIC2 FOREIGN KEY (departmentID)
  8  	     REFERENCES Department(departmentID)
  9  	     ON DELETE CASCADE
 10  );

Table created.

SQL> --
SQL> CREATE TABLE Attends(
  2  gNumber CHAR(10),
  3  classID CHAR(7),
  4  role VARCHAR2(15) NOT NULL,
  5  -- attendsIC1: The class a given person attends is unique
  6  CONSTRAINT attendsIC1 PRIMARY KEY (gNumber, classID),
  7  -- attendsIC2: A class must be attended by a real person
  8  CONSTRAINT attendsIC2 FOREIGN KEY (gNumber)
  9  	     REFERENCES Person(gNumber)
 10  	     ON DELETE CASCADE,
 11  -- attendsIC3: A person must be in a real class
 12  CONSTRAINT attendsIC3 FOREIGN KEY (classID)
 13  	     REFERENCES Class(classID)
 14  	     ON DELETE CASCADE,
 15  -- attendsIC4: Role in class must be student or professor
 16  CONSTRAINT attendsIC4 CHECK(role IN('Student', 'Professor'))
 17  );

Table created.

SQL> --
SQL> --
SQL> SET FEEDBACK OFF
SQL> /*< The INSERT statements that populate the tables>*/
SQL> INSERT INTO Residence VALUES (111, 'Campus View', 'Off Campus');
SQL> INSERT INTO Residence VALUES (222, '48 West', 'Off Campus');
SQL> INSERT INTO Residence VALUES (333, 'Laker Village', 'On Campus');
SQL> INSERT INTO Residence VALUES (444, 'VanSteeland Apartments', 'On Campus');
SQL> INSERT INTO Residence VALUES (1, 'Home Owner', 'Off Campus');
SQL> --------
SQL> INSERT INTO Room VALUES (1111, 30, 'Mackinac Hall');
SQL> INSERT INTO Room VALUES (2222, 30, 'Mackinac Hall');
SQL> INSERT INTO Room VALUES (3333, 40, 'Seidman Center');
SQL> INSERT INTO Room VALUES (4444, 75, 'Loutit Lecture Halls');
SQL> --------
SQL> INSERT INTO Class VALUES ('CIS 353', 'Database', 28, 1111);
SQL> INSERT INTO Class VALUES ('MGT 438', 'Business Ethics', 19, 3333);
SQL> INSERT INTO Class VALUES ('BMS 250', 'Anatomy', 74, 4444);
SQL> INSERT INTO Class VALUES ('MTH 408', 'Advance Calculus I', 14, 2222);
SQL> INSERT INTO Class VALUES ('MTH 315', 'Discrete Mathematics', 24, 2222);
SQL> --------
SQL> INSERT INTO Person VALUES ('G00000000', 'John Smith', 'Student', 111);
SQL> INSERT INTO Person VALUES ('G00000001', 'Jessica Williams', 'Student', 222);
SQL> INSERT INTO Person VALUES ('G00000002', 'Benjamin Mcguire', 'Student', 333);
SQL> INSERT INTO Person VALUES ('G00000003', 'Jane Wheeler', 'Student', 444);
SQL> INSERT INTO Person VALUES ('G00000004', 'Meoldy Harmon', 'Student', 111);
SQL> INSERT INTO Person VALUES ('G00000005', 'Erma Nguyen', 'Student', 222);
SQL> INSERT INTO Person VALUES ('G00000006', 'Gregg Roberson', 'Student', 333);
SQL> INSERT INTO Person VALUES ('G00000007', 'Alexandra Cain', 'Student', 444);
SQL> INSERT INTO Person VALUES ('G00000008', 'Peggy Holloway', 'Student', 1);
SQL> INSERT INTO Person VALUES ('G00000009', 'Suzanne Barber', 'Student', 222);
SQL> INSERT INTO Person VALUES ('G11111111', 'Sarah Jones', 'Professor', 1);
SQL> INSERT INTO Person VALUES ('G22222222', 'Stacy Baldwin', 'Professor', 1);
SQL> INSERT INTO Person VALUES ('G33333333', 'Gene Copeland', 'Professor', 1);
SQL> INSERT INTO Person VALUES ('G44444444', 'Francisco Brock', 'Professor', 1);
SQL> --------
SQL> INSERT INTO Department VALUES (11, 'Business', 'G11111111');
SQL> INSERT INTO Department VALUES (22, 'Nursing', 'G44444444');
SQL> INSERT INTO Department VALUES (33, 'Engineering and Computing', 'G22222222');
SQL> INSERT INTO Department VALUES (44, 'Mathematics', NULL);
SQL> --------
SQL> INSERT INTO VaccineRecord VALUES ('G00000000', TO_DATE('04/10/21', 'MM/DD/YY'), 'Pfizer', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G00000000', TO_DATE('05/01/21', 'MM/DD/YY'), 'Pfizer', 2);
SQL> INSERT INTO VaccineRecord VALUES ('G00000001', TO_DATE('04/10/21', 'MM/DD/YY'), 'Johnson and Johnson', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G00000003', TO_DATE('07/01/21', 'MM/DD/YY'), 'Moderna', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G00000003', TO_DATE('07/22/21', 'MM/DD/YY'), 'Moderna', 2);
SQL> INSERT INTO VaccineRecord VALUES ('G00000004', TO_DATE('11/12/21', 'MM/DD/YY'), 'Pfizer', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G00000005', TO_DATE('10/09/21', 'MM/DD/YY'), 'Johnson and Johnson', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G00000006', TO_DATE('08/30/21', 'MM/DD/YY'), 'Moderna', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G00000006', TO_DATE('09/20/21', 'MM/DD/YY'), 'Moderna', 2);
SQL> INSERT INTO VaccineRecord VALUES ('G00000008', TO_DATE('03/25/21', 'MM/DD/YY'), 'Pfizer', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G00000008', TO_DATE('04/15/21', 'MM/DD/YY'), 'Pfizer', 2);
SQL> INSERT INTO VaccineRecord VALUES ('G00000009', TO_DATE('09/02/21', 'MM/DD/YY'), 'Johnson and Johnson', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G11111111', TO_DATE('11/23/21', 'MM/DD/YY'), 'Moderna', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G22222222', TO_DATE('02/13/21', 'MM/DD/YY'), 'Moderna', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G22222222', TO_DATE('03/06/21', 'MM/DD/YY'), 'Moderna', 2);
SQL> INSERT INTO VaccineRecord VALUES ('G33333333', TO_DATE('08/30/21', 'MM/DD/YY'), 'Pfizer', 1);
SQL> INSERT INTO VaccineRecord VALUES ('G33333333', TO_DATE('09/20/21', 'MM/DD/YY'), 'Pfizer', 2);
SQL> INSERT INTO VaccineRecord VALUES ('G44444444', TO_DATE('04/10/21', 'MM/DD/YY'), 'Johnson and Johnson', 1);
SQL> --------
SQL> INSERT INTO VaccineTest VALUES ('G00000000', TO_DATE('09/10/21', 'MM/DD/YY'), 'Negative', 'Rapid');
SQL> INSERT INTO VaccineTest VALUES ('G00000000', TO_DATE('10/16/21', 'MM/DD/YY'), 'Negative', 'Rapid');
SQL> INSERT INTO VaccineTest VALUES ('G00000002', TO_DATE('11/16/21', 'MM/DD/YY'), 'Positive', 'Rapid');
SQL> INSERT INTO VaccineTest VALUES ('G00000003', TO_DATE('05/16/21', 'MM/DD/YY'), 'Negative', 'Slow');
SQL> INSERT INTO VaccineTest VALUES ('G00000003', TO_DATE('06/17/21', 'MM/DD/YY'), 'Negative', 'Rapid');
SQL> INSERT INTO VaccineTest VALUES ('G00000005', TO_DATE('11/28/21', 'MM/DD/YY'), NULL, 'Slow');
SQL> INSERT INTO VaccineTest VALUES ('G00000006', TO_DATE('04/11/21', 'MM/DD/YY'), 'Negative', 'Slow');
SQL> INSERT INTO VaccineTest VALUES ('G00000006', TO_DATE('06/18/21', 'MM/DD/YY'), 'Negative', 'Rapid');
SQL> INSERT INTO VaccineTest VALUES ('G00000006', TO_DATE('08/15/21', 'MM/DD/YY'), 'Positive', 'Rapid');
SQL> INSERT INTO VaccineTest VALUES ('G00000006', TO_DATE('10/31/20', 'MM/DD/YY'), 'Positive', 'Slow');
SQL> INSERT INTO VaccineTest VALUES ('G00000007', TO_DATE('01/05/21', 'MM/DD/YY'), 'Positive', 'Slow');
SQL> INSERT INTO VaccineTest VALUES ('G00000008', TO_DATE('05/06/21', 'MM/DD/YY'), 'Negative', 'Rapid');
SQL> INSERT INTO VaccineTest VALUES ('G11111111', TO_DATE('07/10/21', 'MM/DD/YY'), 'Negative', 'Rapid');
SQL> INSERT INTO VaccineTest VALUES ('G22222222', TO_DATE('12/17/20', 'MM/DD/YY'), 'Negative', 'Rapid');
SQL> INSERT INTO VaccineTest VALUES ('G44444444', TO_DATE('10/21/20', 'MM/DD/YY'), 'Negative', 'Slow');
SQL> INSERT INTO VaccineTest VALUES ('G44444444', TO_DATE('01/27/20', 'MM/DD/YY'), 'Negative', 'Slow');
SQL> INSERT INTO VaccineTest VALUES ('G44444444', TO_DATE('02/14/21', 'MM/DD/YY'), 'Negative', 'Rapid');
SQL> INSERT INTO VaccineTest VALUES ('G44444444', TO_DATE('09/10/21', 'MM/DD/YY'), 'Negative', 'Rapid');
SQL> --------
SQL> INSERT INTO DepartmentLocation VALUES (11, 'Allendale');
SQL> INSERT INTO DepartmentLocation VALUES (11, 'Grand Rapids');
SQL> INSERT INTO DepartmentLocation VALUES (11, 'Holland');
SQL> INSERT INTO DepartmentLocation VALUES (33, 'Allendale');
SQL> INSERT INTO DepartmentLocation VALUES (22, 'Grand Rapids');
SQL> INSERT INTO DepartmentLocation VALUES (44, 'Allendale');
SQL> INSERT INTO DepartmentLocation VALUES (44, 'Grand Rapids');
SQL> --------
SQL> INSERT INTO Attends VALUES ('G22222222', 'CIS 353', 'Professor');
SQL> INSERT INTO Attends VALUES ('G33333333', 'MTH 408', 'Professor');
SQL> INSERT INTO Attends VALUES ('G33333333', 'MTH 315', 'Professor');
SQL> INSERT INTO Attends VALUES ('G44444444', 'BMS 250', 'Professor');
SQL> INSERT INTO Attends VALUES ('G11111111', 'MGT 438', 'Professor');
SQL> INSERT INTO Attends VALUES ('G00000000', 'MTH 315', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000001', 'MGT 438', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000002', 'BMS 250', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000003', 'CIS 353', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000003', 'MTH 315', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000004', 'MTH 315', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000004', 'MTH 408', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000004', 'CIS 353', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000005', 'MGT 438', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000005', 'MTH 315', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000006', 'BMS 250', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000007', 'BMS 250', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000007', 'MTH 408', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000008', 'MGT 438', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000009', 'CIS 353', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000009', 'MGT 438', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000009', 'MTH 408', 'Student');
SQL> INSERT INTO Attends VALUES ('G00000009', 'BMS 250', 'Student');
SQL> --------
SQL> SET FEEDBACK ON
SQL> COMMIT;

Commit complete.

SQL> --
SQL> /*< One query (per table) of the form: SELECT * FROM table; in order to display your database >*/
SQL> SELECT * FROM Residence;

RESIDENCEID RESIDENCENAME             RESIDENCETYPE                             
----------- ------------------------- ---------------                           
        111 Campus View               Off Campus                                
        222 48 West                   Off Campus                                
        333 Laker Village             On Campus                                 
        444 VanSteeland Apartments    On Campus                                 
          1 Home Owner                Off Campus                                

5 rows selected.

SQL> SELECT * FROM Room;

   ROOMNUM ROOMCAPACITY BUILDINGNAME                                            
---------- ------------ -------------------------                               
      1111           30 Mackinac Hall                                           
      2222           30 Mackinac Hall                                           
      3333           40 Seidman Center                                          
      4444           75 Loutit Lecture Halls                                    

4 rows selected.

SQL> SELECT * FROM Class;

CLASSID CLASSNAME                 NUMSTUDENTS    ROOMNUM                        
------- ------------------------- ----------- ----------                        
CIS 353 Database                           28       1111                        
MGT 438 Business Ethics                    19       3333                        
BMS 250 Anatomy                            74       4444                        
MTH 408 Advance Calculus I                 14       2222                        
MTH 315 Discrete Mathematics               24       2222                        

5 rows selected.

SQL> SELECT * FROM Person;

GNUMBER    PNAME                PTYPE                RESID                      
---------- -------------------- --------------- ----------                      
G00000000  John Smith           Student                111                      
G00000001  Jessica Williams     Student                222                      
G00000002  Benjamin Mcguire     Student                333                      
G00000003  Jane Wheeler         Student                444                      
G00000004  Meoldy Harmon        Student                111                      
G00000005  Erma Nguyen          Student                222                      
G00000006  Gregg Roberson       Student                333                      
G00000007  Alexandra Cain       Student                444                      
G00000008  Peggy Holloway       Student                  1                      
G00000009  Suzanne Barber       Student                222                      
G11111111  Sarah Jones          Professor                1                      

GNUMBER    PNAME                PTYPE                RESID                      
---------- -------------------- --------------- ----------                      
G22222222  Stacy Baldwin        Professor                1                      
G33333333  Gene Copeland        Professor                1                      
G44444444  Francisco Brock      Professor                1                      

14 rows selected.

SQL> SELECT * FROM Department;

DEPARTMENTID DEPARTMENTNAME            DEPARTMENT                               
------------ ------------------------- ----------                               
          11 Business                  G11111111                                
          22 Nursing                   G44444444                                
          33 Engineering and Computing G22222222                                
          44 Mathematics                                                        

4 rows selected.

SQL> SELECT * FROM VaccineRecord;

GNUMBER    SHOTDATE  VACCINETYPE          SHOTNUMBER                            
---------- --------- -------------------- ----------                            
G00000000  10-APR-21 Pfizer                        1                            
G00000000  01-MAY-21 Pfizer                        2                            
G00000001  10-APR-21 Johnson and Johnson           1                            
G00000003  01-JUL-21 Moderna                       1                            
G00000003  22-JUL-21 Moderna                       2                            
G00000004  12-NOV-21 Pfizer                        1                            
G00000005  09-OCT-21 Johnson and Johnson           1                            
G00000006  30-AUG-21 Moderna                       1                            
G00000006  20-SEP-21 Moderna                       2                            
G00000008  25-MAR-21 Pfizer                        1                            
G00000008  15-APR-21 Pfizer                        2                            

GNUMBER    SHOTDATE  VACCINETYPE          SHOTNUMBER                            
---------- --------- -------------------- ----------                            
G00000009  02-SEP-21 Johnson and Johnson           1                            
G11111111  23-NOV-21 Moderna                       1                            
G22222222  13-FEB-21 Moderna                       1                            
G22222222  06-MAR-21 Moderna                       2                            
G33333333  30-AUG-21 Pfizer                        1                            
G33333333  20-SEP-21 Pfizer                        2                            
G44444444  10-APR-21 Johnson and Johnson           1                            

18 rows selected.

SQL> SELECT * FROM VaccineTest;

GNUMBER    TESTDATE  TESTRESULT      TESTTYPE                                   
---------- --------- --------------- ----------                                 
G00000000  10-SEP-21 Negative        Rapid                                      
G00000000  16-OCT-21 Negative        Rapid                                      
G00000002  16-NOV-21 Positive        Rapid                                      
G00000003  16-MAY-21 Negative        Slow                                       
G00000003  17-JUN-21 Negative        Rapid                                      
G00000005  28-NOV-21                 Slow                                       
G00000006  11-APR-21 Negative        Slow                                       
G00000006  18-JUN-21 Negative        Rapid                                      
G00000006  15-AUG-21 Positive        Rapid                                      
G00000006  31-OCT-20 Positive        Slow                                       
G00000007  05-JAN-21 Positive        Slow                                       

GNUMBER    TESTDATE  TESTRESULT      TESTTYPE                                   
---------- --------- --------------- ----------                                 
G00000008  06-MAY-21 Negative        Rapid                                      
G11111111  10-JUL-21 Negative        Rapid                                      
G22222222  17-DEC-20 Negative        Rapid                                      
G44444444  21-OCT-20 Negative        Slow                                       
G44444444  27-JAN-20 Negative        Slow                                       
G44444444  14-FEB-21 Negative        Rapid                                      
G44444444  10-SEP-21 Negative        Rapid                                      

18 rows selected.

SQL> SELECT * FROM DepartmentLocation;

DEPARTMENTID DEPARTMENTLOCATION                                                 
------------ -------------------------                                          
          11 Allendale                                                          
          11 Grand Rapids                                                       
          11 Holland                                                            
          22 Grand Rapids                                                       
          33 Allendale                                                          
          44 Allendale                                                          
          44 Grand Rapids                                                       

7 rows selected.

SQL> SELECT * FROM Attends;

GNUMBER    CLASSID ROLE                                                         
---------- ------- ---------------                                              
G22222222  CIS 353 Professor                                                    
G33333333  MTH 408 Professor                                                    
G33333333  MTH 315 Professor                                                    
G44444444  BMS 250 Professor                                                    
G11111111  MGT 438 Professor                                                    
G00000000  MTH 315 Student                                                      
G00000001  MGT 438 Student                                                      
G00000002  BMS 250 Student                                                      
G00000003  CIS 353 Student                                                      
G00000003  MTH 315 Student                                                      
G00000004  MTH 315 Student                                                      

GNUMBER    CLASSID ROLE                                                         
---------- ------- ---------------                                              
G00000004  MTH 408 Student                                                      
G00000004  CIS 353 Student                                                      
G00000005  MGT 438 Student                                                      
G00000005  MTH 315 Student                                                      
G00000006  BMS 250 Student                                                      
G00000007  BMS 250 Student                                                      
G00000007  MTH 408 Student                                                      
G00000008  MGT 438 Student                                                      
G00000009  CIS 353 Student                                                      
G00000009  MGT 438 Student                                                      
G00000009  MTH 408 Student                                                      

GNUMBER    CLASSID ROLE                                                         
---------- ------- ---------------                                              
G00000009  BMS 250 Student                                                      

23 rows selected.

SQL> --
SQL> /*< The SQL queries>*/
SQL> --
SQL> -- Q1: A join involving at least four relations
SQL> -- Select the G number and names of people who attend Business Ethics and received the Johnson and Johnson vaccine.
SQL> SELECT  p.gNumber, p.pName
  2  FROM    Person p, Class c, VaccineRecord v, Attends a
  3  WHERE   p.gNumber = a.gNumber AND
  4  	     a.classID = c.classID AND
  5  	     c.className = 'Business Ethics' AND
  6  	     p.gNumber = v.gNumber AND
  7  	     v.vaccineType = 'Johnson and Johnson';

GNUMBER    PNAME                                                                
---------- --------------------                                                 
G00000001  Jessica Williams                                                     
G00000005  Erma Nguyen                                                          
G00000009  Suzanne Barber                                                       

3 rows selected.

SQL> -- Q2: A self-join
SQL> -- Select pairs of classes that are taught in the same room. Remove duplicates.
SQL> SELECT  c1.className, c2.className
  2  FROM    Class c1, Class c2
  3  WHERE   c1.roomNum = c2.roomNum AND
  4  	     c1.classID < c2.classID;

CLASSNAME                 CLASSNAME                                             
------------------------- -------------------------                             
Discrete Mathematics      Advance Calculus I                                    

1 row selected.

SQL> -- Q3: Union
SQL> -- Select the G number and name of every person whose name is ‘John Smith’ or every person that lives on campus.
SQL> SELECT  p.gNumber, p.pName
  2  FROM    Person p
  3  WHERE   p.pName = 'John Smith'
  4  UNION
  5  SELECT  p.gNumber, p.pName
  6  FROM    Person p, Residence r
  7  WHERE   p.resID = r.residenceID AND
  8  	     r.residenceType = 'On Campus';

GNUMBER    PNAME                                                                
---------- --------------------                                                 
G00000000  John Smith                                                           
G00000002  Benjamin Mcguire                                                     
G00000003  Jane Wheeler                                                         
G00000006  Gregg Roberson                                                       
G00000007  Alexandra Cain                                                       

5 rows selected.

SQL> -- Q4: Max, Min
SQL> -- Select the highest and lowest capacities from the Room table.
SQL> SELECT MAX(roomCapacity), MIN(roomCapacity)
  2  FROM Room;

MAX(ROOMCAPACITY) MIN(ROOMCAPACITY)                                             
----------------- -----------------                                             
               75                30                                             

1 row selected.

SQL> -- Q5: GROUP BY, HAVING, and ORDER BY, all appearing in the same query.
SQL> -- Select the G number and name of students that are taking more than 2 classes. Order by G number.
SQL> SELECT  p.gNumber, p.pName, COUNT(*) AS numClasses
  2  FROM    Person p, Attends a
  3  WHERE   p.gNumber = a.gNumber
  4  GROUP BY p.gNumber, p.pName
  5  HAVING  COUNT(*) > 2
  6  ORDER BY p.gNumber;

GNUMBER    PNAME                NUMCLASSES                                      
---------- -------------------- ----------                                      
G00000004  Meoldy Harmon                 3                                      
G00000009  Suzanne Barber                4                                      

2 rows selected.

SQL> -- Q6: A correlated subquery
SQL> -- Select the G number and names of students who live on campus and received the Moderna vaccine.
SQL> SELECT  p.gNumber, p.pName
  2  FROM    Person p, Residence r
  3  WHERE   p.resID = r.residenceID AND
  4  	     r.residenceType = 'On Campus' AND
  5  	     EXISTS (SELECT *
  6  		     FROM VaccineRecord v
  7  		     WHERE p.gNumber = v.gNumber AND
  8  		     v.vaccineType = 'Moderna');

GNUMBER    PNAME                                                                
---------- --------------------                                                 
G00000003  Jane Wheeler                                                         
G00000006  Gregg Roberson                                                       

2 rows selected.

SQL> -- Q7: A non-correlated subquery
SQL> -- Select the G number and names of students who live on campus and received the Moderna vaccine.
SQL> SELECT  p.gNumber, p.pName
  2  FROM    Person p, Residence r
  3  WHERE   p.resID = r.residenceID AND
  4  	     r.residenceType = 'On Campus' AND
  5  	     p.gNumber IN (SELECT v.gNumber
  6  			     FROM VaccineRecord v
  7  			     WHERE v.vaccineType = 'Moderna');

GNUMBER    PNAME                                                                
---------- --------------------                                                 
G00000003  Jane Wheeler                                                         
G00000006  Gregg Roberson                                                       

2 rows selected.

SQL> -- Q8: A relational DIVISION query
SQL> -- Select the G number and name of every person who attends every class that is held in room 2222.
SQL> SELECT p.gNumber, p.pName
  2  FROM Person p
  3  WHERE NOT EXISTS((SELECT c.classID
  4  			FROM Class c
  5  			WHERE c.roomNum = 2222)
  6  			MINUS
  7  		      (SELECT c.classID
  8  			FROM Class c, Attends a
  9  			WHERE p.gNumber = a.gNumber AND
 10  			a.classID = c.classID AND
 11  			c.roomNum = 2222));

GNUMBER    PNAME                                                                
---------- --------------------                                                 
G00000004  Meoldy Harmon                                                        
G33333333  Gene Copeland                                                        

2 rows selected.

SQL> -- Q9: An outer join query.
SQL> -- Select the G number and name of every person. Also, for those who have received a COVID test, show the date and results of the test.
SQL> SELECT p.gNumber, p.pName, v.testResult, v.testDate
  2  FROM Person P LEFT OUTER JOIN VaccineTest v on p.gNumber = v.gNumber;

GNUMBER    PNAME                TESTRESULT      TESTDATE                        
---------- -------------------- --------------- ---------                       
G00000000  John Smith           Negative        10-SEP-21                       
G00000000  John Smith           Negative        16-OCT-21                       
G00000002  Benjamin Mcguire     Positive        16-NOV-21                       
G00000003  Jane Wheeler         Negative        16-MAY-21                       
G00000003  Jane Wheeler         Negative        17-JUN-21                       
G00000005  Erma Nguyen                          28-NOV-21                       
G00000006  Gregg Roberson       Negative        11-APR-21                       
G00000006  Gregg Roberson       Negative        18-JUN-21                       
G00000006  Gregg Roberson       Positive        15-AUG-21                       
G00000006  Gregg Roberson       Positive        31-OCT-20                       
G00000007  Alexandra Cain       Positive        05-JAN-21                       

GNUMBER    PNAME                TESTRESULT      TESTDATE                        
---------- -------------------- --------------- ---------                       
G00000008  Peggy Holloway       Negative        06-MAY-21                       
G11111111  Sarah Jones          Negative        10-JUL-21                       
G22222222  Stacy Baldwin        Negative        17-DEC-20                       
G44444444  Francisco Brock      Negative        21-OCT-20                       
G44444444  Francisco Brock      Negative        27-JAN-20                       
G44444444  Francisco Brock      Negative        14-FEB-21                       
G44444444  Francisco Brock      Negative        10-SEP-21                       
G33333333  Gene Copeland                                                        
G00000001  Jessica Williams                                                     
G00000009  Suzanne Barber                                                       
G00000004  Meoldy Harmon                                                        

22 rows selected.

SQL> -- Q10: Count
SQL> -- Find the number of locations for each department.
SQL> SELECT  d.departmentID, COUNT(*)
  2  FROM    DepartmentLocation d
  3  GROUP BY d.departmentID;

DEPARTMENTID   COUNT(*)                                                         
------------ ----------                                                         
          11          3                                                         
          22          1                                                         
          33          1                                                         
          44          2                                                         

4 rows selected.

SQL> --
SQL> /*< The insert/delete/update statements to test the enforcement of ICs >*/
SQL> --
SQL> -- Testing: personIC1
SQL> INSERT INTO Person VALUES ('G00000000', 'James Smith', 'Student', 111);
INSERT INTO Person VALUES ('G00000000', 'James Smith', 'Student', 111)
*
ERROR at line 1:
ORA-00001: unique constraint (IRONSJ.PERSONIC1) violated 


SQL> -- Testing: personIC2
SQL> UPDATE Person SET resID = 0 WHERE gNumber = 'G00000000';
UPDATE Person SET resID = 0 WHERE gNumber = 'G00000000'
*
ERROR at line 1:
ORA-02291: integrity constraint (IRONSJ.PERSONIC2) violated - parent key not 
found 


SQL> -- Testing: recordIC3
SQL> INSERT INTO VaccineRecord VALUES ('G00000002', TO_DATE('10/01/21', 'MM/DD/YY'), 'Fake Vaccine', 1);
INSERT INTO VaccineRecord VALUES ('G00000002', TO_DATE('10/01/21', 'MM/DD/YY'), 'Fake Vaccine', 1)
*
ERROR at line 1:
ORA-02290: check constraint (IRONSJ.RECORDIC3) violated 


SQL> -- Testing: recordIC4
SQL> INSERT INTO VaccineRecord VALUES ('G00000001', TO_DATE('05/10/21', 'MM/DD/YY'), 'Johnson and Johnson', 2);
INSERT INTO VaccineRecord VALUES ('G00000001', TO_DATE('05/10/21', 'MM/DD/YY'), 'Johnson and Johnson', 2)
*
ERROR at line 1:
ORA-02290: check constraint (IRONSJ.RECORDIC4) violated 


SQL> --
SQL> COMMIT;

Commit complete.

SQL> --
SQL> SPOOL OFF
